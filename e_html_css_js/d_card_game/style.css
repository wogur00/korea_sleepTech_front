
* {
  margin: 0;
  padding: 0;
}

h1 {
  display: flex;
  justify-content: center;
  margin-top: 50px;
  padding: 10px;
}

#total-container {
  width: 80%;
  height: 80%;
  margin: 0 auto;
  margin-top: 20px;
  padding: 20px;
  background-color: rgb(242, 251, 237);
  border-radius: 10px;
}

#game-container {
  height: 90%;
  margin-bottom: 20px;
}

#card-container {
  width: 100%;
  
  /* 해당 컨테이너 내부가 grid container로 변경*/
  display: grid; 

  /* '열' 세로값 지정: 4개의 열을 1의 비율로 설정 */
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(3, 1fr);
  gap: 10px;
}

.card {
  width: 100%;
  height: 150px;
  display: inline-block;
  /* 원근법 지정 속성:
  : 주로 100px에서 1000px 값을 사용하여 원하는 깊이 효과를 지정
  - 부모 요소에 지정 시 자식 요서(.card-inner)에 3D 효과가 적용
  ?
  값이 작을수록 3D 효과가 극명 - 요소들이 더 가까이 있는 것 처럼
  / 값이 클수록 3D 효과가 부드러워짐 - 요소가 멀리 있는 것 처럼
  */
  perspective: 1000px;
}

.card-inner {
  width: 100%;
  height: 100%;

  /* 
  ? 자식 요소들이 3D 공간 내에서 자신의 위치와 회전 상태를 유지
    :.card-front와 .card-back이 3D 좌표계에 배치
      - 개별적인 회전, 이동 등이 변환 적용 가능
  */
  transform-style: preserve-3d;
  transition: transfrom 0.5s;
}

.card.flipped .card-inner {
  /* y축을 기준으로 요소를 180로 전환 */
  transform: rotateY(180deg);
}

.card-front, .card-back {
  width: 100%;
  height: 100%;
  position: absolute;
  backface-visibility: hidden;
}

.card-front {
  background-color: #eee;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 10px;
}

.card-back {
  transform: rotateY(180deg);
  border-radius: 10px;
}

img {
  width: 100%;
  height: 100%;
}

#button-container {
  display: flex;
  justify-content: space-around;
  align-items: center;
}

button {
  background-color: rgba(15, 125, 40, 0.8);
  padding: 10px 20px;
  border: none;
  border-radius: 10px;
  color: white;
  font-size: 18px;
  font-weight: 900;
  cursor: pointer;
  transition: background-color 0.3s, transform 0.3s;
}

button:hover {
  background-color: rgba(4, 180, 49, 0.8);
  transform: scale(1.05);
}
